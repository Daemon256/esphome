packages:
  beacon: !include packages/beacon.yaml
  
esphome:
  name: garage-ha-slave
  friendly_name: garage-ha-slave

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  # do not log to serial
  baud_rate: 0

# Enable Home Assistant API
api:
  encryption:
    key: "SUI+2tAU4QM6jDKw4utdwmpFKyZrvoCD4IyJ8+OmwU4="
  # disable reboot because we disconnect to scan wifi
  reboot_timeout: 0s

ota:
  password: "d55d376ed4bcfee485afea8865120189"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Garage-Ha-Slave Fallback Hotspot"
    password: "g3K334QqPiX7"

captive_portal:

esp32_ble_tracker:
  scan_parameters: 
    window: 120ms
      

external_components:
  - source:
      type: git
      url: https://github.com/ssieb/custom_components #Thanks for @ssieb components.
    components: [ serial ]

uart:
  rx_pin: GPIO22
  tx_pin: GPIO23
  baud_rate: 9600
  data_bits: 8
  stop_bits: 2
  parity: NONE
  # debug:
  #   direction: BOTH
  #   dummy_receiver: false
  #   after:
  #     delimiter: "\n"
  #   sequence:
  #     - lambda: UARTDebug::log_string(direction, bytes);

text_sensor:
  - platform: serial
    name: Received master text
    id: master_text
  - platform: wifi_info
    scan_results:
      name: ESP Latest Scan Results
      id: scan_results

text:
  - platform: template
    mode: text
    name: Send to master
    id: send_to_master
    set_action:
      then:
        - uart.write: !lambda |-
            std::string sendme = x + "\n";
            return std::vector<uint8_t>(sendme.begin(), sendme.end());


                

