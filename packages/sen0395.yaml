esphome:
  comment: Sen0395

# Disable uart logging
logger:
  baud_rate: 0
  level: DEBUG

uart:
  id: SEN0395_UART_BUS
  rx_pin: ${uart_rx_pin}
  tx_pin: ${uart_tx_pin}
  baud_rate: 115200
  data_bits: 8
  stop_bits: 1
  parity: NONE

dfrobot_sen0395:
  - uart_id: SEN0395_UART_BUS

binary_sensor:
  - platform: gpio
    name: "${device_name_pretty}"
    id: mmwave_presence_detection
    device_class: motion
    pin:
      number: ${presence_pin}
      mode: INPUT_PULLDOWN

number:
  # - platform: template
  #   name: "${device_name_pretty} distance"
  #   id: distance # do not change
  #   entity_category: config
  #   min_value: 0.15
  #   max_value: 9.45
  #   step: 0.15
  #   unit_of_measurement: M
  #   mode: box
  #   lambda: 'return {};'
  #   set_action:
  #     - dfrobot_sen0395.settings:
  #         detection_segments:
  #           - !lambda |-
  #               return 0;
  #           - !lambda |-
  #               return id(distance).state;
      
  # - platform: template
  #   name: "${device_name_pretty} latency"
  #   id: latency # do not change
  #   entity_category: config
  #   min_value: 1
  #   max_value: 600
  #   step: 1
  #   unit_of_measurement: s
  #   mode: box
  #   lambda: 'return {};'
  #   set_action:
  #     - dfrobot_sen0395.settings:
  #         output_latency:
  #           delay_after_detect: 0s
  #           delay_after_disappear: !lambda 'return id(latency).state * 1.0f;'

  # - platform: template
  #   name: "${device_name_pretty} sensitivity"
  #   id: sensitivity # do not change
  #   entity_category: config
  #   min_value: 0
  #   max_value: 9
  #   step: 1
  #   lambda: 'return {};'
  #   set_action:
  #     - dfrobot_sen0395.settings:
  #         sensitivity: !lambda 'return (int32_t)id(sensitivity).state;'
